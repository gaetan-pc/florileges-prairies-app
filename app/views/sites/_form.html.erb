<script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry" type="text/javascript"></script>
<script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=places" type="text/javascript"></script>
<script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>

<%= simple_form_for(@site, :defaults => { :wrapper_html => {:class => 'form-group'}, :input_html => { :class => 'form-control' }, :html => {:multipart => true} }) do |f| %>
  <%= f.error_notification %>
  <div class="row">
    <div class="col-md-4 well">
      <%= f.input :code %>
      <%= f.input :name %>
      <%= f.input :parc %>
      <%= f.hidden_field :latitude %>
      <%= f.hidden_field :longitude %>
      <%= f.input :location %>

    </div>
    <div class="col-md-8">
      <input id="pac-input" class="gmcontrols" type="text"
      placeholder="Saisir un lieu ou une adresse">
      <div id="type-selector" class="gmcontrols">
        <input type="radio" name="type" id="changetype-all" checked="checked">
        <label for="changetype-all">Tout</label>

        <input type="radio" name="type" id="changetype-establishment">
        <label for="changetype-establishment">Lieux</label>

        <input type="radio" name="type" id="changetype-geocode">
        <label for="changetype-geocode">Adresses</label>
      </div>
      <div id="map-canvas" style='width: auto; height: 400px;'></div>
            </div>
  </div>

  <div>
    <%= f.submit 'Enregistrer les modifications', class: 'btn btn-warning pull-left' %>
  </div>
  <br>
<% end %>
<hr>

<script type="text/javascript">
  handler = Gmaps.build('Google');
  handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
    markers = handler.addMarkers(<%=raw @hash.to_json %>, {draggable: true});
    handler.bounds.extendWith(markers);
    handler.fitMapToBounds();
  });

  google.maps.event.addDomListener(window, 'load', initialize);

</script>

<script>
  function initialize() {
    <% if @site.latitude? %>
      var myLatlng = new google.maps.LatLng(<%= @site.latitude %>, <%= @site.longitude %>);
    <% else %>
      var myLatlng = new google.maps.LatLng(48.856638, 2.352241);
    <% end %>
    var mapOptions = {
      center: myLatlng,
      zoom: 13
    };
    var map = new google.maps.Map(document.getElementById('map-canvas'),
      mapOptions);

    var input = /** @type {HTMLInputElement} */(
        document.getElementById('pac-input'));

    var types = document.getElementById('type-selector');
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

    var autocomplete = new google.maps.places.Autocomplete(input);
    autocomplete.bindTo('bounds', map);

    var infowindow = new google.maps.InfoWindow();
    <% if @site.latitude? %>
    var collection = new google.maps.Marker({
      position: myLatlng,
      map: map,
      draggable: true,
      title: 'Cliquer pour zoomer sur <%= @site.name %>'
    });
    <% end %>

    var site = new google.maps.Marker({
      map: map,
      anchorPoint: new google.maps.Point(0, -29),
      draggable: true
    });

    google.maps.event.addListener(autocomplete, 'place_changed', function() {
      infowindow.close();
      site.setVisible(false);
      var place = autocomplete.getPlace();
      if (!place.geometry) {
        return;
      }
      // If the place has a geometry, then present it on a map.
      if (place.geometry.viewport) {
        map.fitBounds(place.geometry.viewport);
      } else {
        map.setCenter(place.geometry.location);
        map.setZoom(17);  // Why 17? Because it looks good.
      }
      site.setIcon(/** @type {google.maps.Icon} */({
        url: place.icon,
        size: new google.maps.Size(71, 71),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 34),
        scaledSize: new google.maps.Size(35, 35)
      }));
      site.setPosition(place.geometry.location);
      site.setVisible(true);

      var address = '';
      if (place.address_components) {
        address = [
          (place.address_components[0] && place.address_components[0].short_name || ''),
          (place.address_components[1] && place.address_components[1].short_name || ''),
          (place.address_components[2] && place.address_components[2].short_name || '')
        ].join(' ');
        var lat=document.getElementById("site_latitude").value=place.geometry.location.lat();    
        var lng=document.getElementById("site_longitude").value=place.geometry.location.lng();

        var site_location=document.getElementById("site_location").value=place.formatted_address;

      }

      infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
      infowindow.open(map, site);
    });

    // Sets a listener on a radio button to change the filter type on Places
    // Autocomplete.
    function setupClickListener(id, types) {
      var radioButton = document.getElementById(id);
      google.maps.event.addDomListener(radioButton, 'click', function() {
        autocomplete.setTypes(types);
      });
    }

    setupClickListener('changetype-all', []);
    setupClickListener('changetype-establishment', ['establishment']);
    setupClickListener('changetype-geocode', ['geocode']);
  }

  

  google.maps.event.addDomListener(window, 'load', initialize);

</script>
